"""
Django settings for treasurysystem project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path
from celery import Celery
from celery.schedules import crontab
from dotenv import load_dotenv
from .settings_loader import load_env_file, EnvironmentManager

# Initialize the environment manager and load the appropriate env file
env_manager = EnvironmentManager.get_instance()
ENV_MODE = env_manager.load_env_file()


# Now continue with the rest of the settings
BASE_DIR = Path(__file__).resolve().parent.parent

# Import tasks after Django is configured
from treasurysystem import tasks

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# For loading locally the dajngo and serving app from localhost

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = os.environ.get("SECRET_KEY")

DEBUG = bool(os.environ.get("DEBUG", default=0))

# 'DJANGO_ALLOWED_HOSTS' should be a single string of hosts with a space between each.
# For example: '
# DJANGO_ALLOWED_HOSTS='localhost'
ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS",'').split()


# Application definition

INSTALLED_APPS = [
    'daphne',
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders', 
    'rest_framework',
    'fxapp',
    'contacts',
    'money_market',
    'django_filters'
]

ASGI_APPLICATION = 'treasurysystem.asgi.application'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',  # Fixed this line
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'treasurysystem.middleware.EnvironmentSwitchMiddleware',  # Add this to check and switch environments
    'treasurysystem.middleware.DatabaseHealthMiddleware',   
]

ROOT_URLCONF = 'treasurysystem.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'treasurysystem.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

from .settings_loader import load_settings

DATABASE_ROUTERS = ['treasurysystem.db_router.AutoSwitchRouter']
ENV_MODE = env_manager.load_env_file()


# Add this debugging section
db_params = {
    'ENGINE': os.getenv('POSTGRES_ENGINE'),
    'NAME': os.getenv('POSTGRES_DB' ),
    'USER': os.getenv('POSTGRES_USER'),
    'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
    'HOST': os.getenv('POSTGRES_HOST' ),
    'PORT': os.getenv('POSTGRES_PORT' )
}


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB', 'treasury_system'),
        'USER': os.getenv('POSTGRES_USER', 'postgres'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
        'HOST': os.getenv('POSTGRES_HOST', 'localhost'),
        'PORT': os.getenv('POSTGRES_PORT', '5432'),
        'OPTIONS': {
            'sslmode': 'disable',
        },
    }
}

if ENV_MODE == 'production':
    DATABASES['supabase'] = {
           'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB'),
        'USER': os.getenv('POSTGRES_USER'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
        'HOST': os.getenv('POSTGRES_HOST'),
        'PORT': os.getenv('POSTGRES_PORT'),
        'OPTIONS': {
            'sslmode': 'require',
                        'keepalives': 1,
            'keepalives_idle': 30,
            'keepalives_interval': 10,
            'keepalives_count': 5,
            'client_encoding': 'UTF8',
            'use_tcp': True,  # Force TCP connection
        },
    }

# Database fallback settings
DATABASE_FALLBACK_ENABLED = True
DATABASE_ONLINE_RETRY_INTERVAL = 300  # 5 minutes

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 20
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]


# CORS_ORIGIN_ALLOW_ALL = True
# For local dev, localhost was not working but 127. was
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:4200",
    "http://localhost:4200",
  
]

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS'
]
ALLOWED_HOSTS =[
    'localhost',
    '127.0.0.1',
    '0.0.0.0',
]


# Connect Celery to Redis
CELERY_BROKER_URL = os.environ.get("CELERY_BROKER_URL", "redis://redis:6379")
CELERY_RESULT_BACKEND = os.environ.get("CELERY_RESULT_BACKEND", "redis://redis:6379")

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('redis', 6379)],
            'capacity': 1500,
            'expiry': 10,
        },
    },
}

# PVZKPPNf2FmqHagUcU0JJVG5NIEDuxY0 API KEY APILAYER
CELERY_BEAT_SCHEDULE = {
 
    "send_email_report": {
        "task": "treasurysystem.tasks.send_email_report",
        "schedule": crontab(hour="*/5"),
    },
    'send_positions': {  
        'task': 'treasurysystem.tasks.send_position_updates',  
        'schedule': crontab(minute='*/10'),  # Every 10 minutes  
    }, 
    'check-and-update-exchange-rates': {
        'task': 'treasurysystem.tasks.update_rates_task',
        'schedule': crontab(minute='*/30'),  # Check every 30 minutes
    },
}


EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
DEFAULT_FROM_EMAIL = "noreply@email.com"
ADMINS = [("testuser", "test.user@email.com"), ]


# print("Database Configuration is here:", DATABASES)
# settings.py
DEFAULT_COUNTRY = 'US'  # Fallback country code
SYSTEM_BASE_CURRENCY = 'USD'  # For internal calculations
DEFAULT_BASE_CURRENCY = 'KES' 

# Now you can access the API key using os.getenv
API_LAYER_KEY = os.getenv('API_LAYER_KEY')

# API Rate Limiting Settings
API_RATE_LIMIT = {
    'CALLS_PER_MINUTE': 25,
    'MAX_RETRIES': 3,
    'RETRY_DELAY': 2  # Base delay for exponential backoff
}

# API Configuration
API_SETTINGS = {
    'ENDPOINTS': {
        'EXCHANGERATES_DATA': 'https://api.apilayer.com/exchangerates_data',
        'FIXER': 'https://api.apilayer.com/fixer',
        'CURRENCY_DATA': 'https://api.apilayer.com/currency_data'
    },
    'TIMEOUT': 10,
    'MAX_RETRIES': 3,
    'RETRY_DELAY': 2,
    'DAILY_UPDATE_HOUR': 0,  # Midnight UTC
}
